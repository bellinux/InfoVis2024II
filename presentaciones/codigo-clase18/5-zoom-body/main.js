import "https://cdn.plot.ly/plotly-2.34.0.min.js";
import Protobject from './js/protobject.js';
 

var prevMinSlider = 0, prevMaxSlider = 0;
const minMovement = 4; // Movimiento mínimo para actualizar los deslizadores

function updateSlidersByFactors(zoomFactor, movingFactor) {
    const range = sliderMaxValue; 

    // Calcula el rango ajustado en función del zoom
    const adjustedRange = range * ((100 - zoomFactor) / 100);
    
    // Calcula los valores mínimo y máximo de los deslizadores
    const minSliderValue = parseInt(movingFactor / 100 * (range - adjustedRange));
    const maxSliderValue = parseInt(minSliderValue + adjustedRange);

    // Verifica si los valores de los deslizadores han cambiado significativamente
    if (Math.abs(minSliderValue - prevMinSlider) > minMovement || Math.abs(maxSliderValue - prevMaxSlider) > minMovement) {
        sliderOne.value = minSliderValue; // Actualiza el valor del slider mínimo
        sliderTwo.value = maxSliderValue; // Actualiza el valor del slider máximo
        prevMinSlider = minSliderValue;    // Guarda el valor mínimo anterior
        prevMaxSlider = maxSliderValue;    // Guarda el valor máximo anterior
    }

    // Filtra los datos según los valores de los deslizadores y actualiza el gráfico
    filterDataBySlider(sliderOne.value, sliderTwo.value);
    plotData();
}

// Escucha los datos recibidos del objeto Protobject y actualiza los deslizadores
Protobject.onReceived((data) => {
    const adjustedZoom = (data.zoom - 25) * 3; // Ajusta el zoom (a través de pruebas y errores)
    const adjustedMoving = (data.moving * 1.50) - 25; // Ajusta el movimiento (a través de pruebas y errores)
    updateSlidersByFactors(adjustedZoom, adjustedMoving);
});



document.body.innerHTML = `
	<style>

	#myDiv {
		width: 1000px;
	}

	#contentSlider {
		height: 28px;
		width: 900px;
		margin-left: 60px;
	}

	input[type="range"] {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		width: 915px;
		outline: none;
		background-color: transparent;
		pointer-events: none; /* Desactiva eventos de puntero */
		position: absolute;
		margin-top: -4px;
		margin-left: -4px;
	}

	.slider-track {
		width: 100%;
		height: 5px;
		top: 0;
		bottom: 0;
		border-radius: 5px;
		margin-top: 35px;
		background: #aaa;
	}

	input[type="range"]::-webkit-slider-runnable-track {
		-webkit-appearance: none;
		height: 5px;
	}

	input[type="range"]::-moz-range-track {
		-moz-appearance: none;
		height: 5px;
	}

	input[type="range"]::-ms-track {
		appearance: none;
		height: 5px;
	}

	input[type="range"]::-webkit-slider-thumb {
		-webkit-appearance: none;
		height: 1.7em;
		width: 1.7em;
		background-color: #3264fe;
		cursor: pointer;
		margin-top: -9px;
		pointer-events: auto; /* Habilita eventos de puntero */
		border-radius: 50%;
	}

	input[type="range"]::-moz-range-thumb {
		-webkit-appearance: none;
		height: 1.7em;
		width: 1.7em;
		cursor: pointer;
		border-radius: 50%;
		background-color: #3264fe;
		pointer-events: auto; /* Habilita eventos de puntero */
		border: none;
	}

	input[type="range"]::-ms-thumb {
		appearance: none;
		height: 1.7em;
		width: 1.7em;
		cursor: pointer;
		border-radius: 50%;
		background-color: #3264fe;
		pointer-events: auto; /* Habilita eventos de puntero */
	}

	input[type="range"]:active::-webkit-slider-thumb {
		background-color: #ffffff;
		border: 1px solid #3264fe;
	}

	.values {
		background-color: #3264fe;
		width: 32%;
		position: relative;
		margin: auto;
		padding: 10px 0;
		border-radius: 5px;
		text-align: center;
		font-weight: 500;
		font-size: 25px;
		color: #ffffff;
	}

	.values:before {
		content: "";
		position: absolute;
		height: 0;
		width: 0;
		border-top: 15px solid #3264fe;
		border-left: 15px solid transparent;
		border-right: 15px solid transparent;
		margin: auto;
		bottom: -14px;
		left: 0;
		right: 0;
	}

	</style>
	
	<div id="contentSlider">
		<div class="slider-track"></div>
		<input type="range" min="0" max="0" value="0" id="slider-1">
		<input type="range" min="0" max="0" value="0" id="slider-2">
	</div>
	<div id='myDiv'></div>
`;

	var dates = ["2015-02-17","2015-02-18","2015-02-19","2015-02-20","2015-02-23","2015-02-24","2015-02-25","2015-02-26","2015-02-27","2015-03-02","2015-03-03","2015-03-04","2015-03-05","2015-03-06","2015-03-09","2015-03-10","2015-03-11","2015-03-12","2015-03-13","2015-03-16","2015-03-17","2015-03-18","2015-03-19","2015-03-20","2015-03-23","2015-03-24","2015-03-25","2015-03-26","2015-03-27","2015-03-30","2015-03-31","2015-04-01","2015-04-02","2015-04-06","2015-04-07","2015-04-08","2015-04-09","2015-04-10","2015-04-13","2015-04-14","2015-04-15","2015-04-16","2015-04-17","2015-04-20","2015-04-21","2015-04-22","2015-04-23","2015-04-24","2015-04-27","2015-04-28","2015-04-29","2015-04-30","2015-05-01","2015-05-04","2015-05-05","2015-05-06","2015-05-07","2015-05-08","2015-05-11","2015-05-12","2015-05-13","2015-05-14","2015-05-15","2015-05-18","2015-05-19","2015-05-20","2015-05-21","2015-05-22","2015-05-26","2015-05-27","2015-05-28","2015-05-29","2015-06-01","2015-06-02","2015-06-03","2015-06-04","2015-06-05","2015-06-08","2015-06-09","2015-06-10","2015-06-11","2015-06-12","2015-06-15","2015-06-16","2015-06-17","2015-06-18","2015-06-19","2015-06-22","2015-06-23","2015-06-24","2015-06-25","2015-06-26","2015-06-29","2015-06-30","2015-07-01","2015-07-02","2015-07-06","2015-07-07","2015-07-08","2015-07-09","2015-07-10","2015-07-13","2015-07-14","2015-07-15","2015-07-16","2015-07-17","2015-07-20","2015-07-21","2015-07-22","2015-07-23","2015-07-24","2015-07-27","2015-07-28","2015-07-29","2015-07-30","2015-07-31","2015-08-03","2015-08-04","2015-08-05","2015-08-06","2015-08-07","2015-08-10","2015-08-11","2015-08-12","2015-08-13","2015-08-14","2015-08-17","2015-08-18","2015-08-19","2015-08-20","2015-08-21","2015-08-24","2015-08-25","2015-08-26","2015-08-27","2015-08-28","2015-08-31","2015-09-01","2015-09-02","2015-09-03","2015-09-04","2015-09-08","2015-09-09","2015-09-10","2015-09-11","2015-09-14","2015-09-15","2015-09-16","2015-09-17","2015-09-18","2015-09-21","2015-09-22","2015-09-23","2015-09-24","2015-09-25","2015-09-28","2015-09-29","2015-09-30","2015-10-01","2015-10-02","2015-10-05","2015-10-06","2015-10-07","2015-10-08","2015-10-09","2015-10-12","2015-10-13","2015-10-14","2015-10-15","2015-10-16","2015-10-19","2015-10-20","2015-10-21","2015-10-22","2015-10-23","2015-10-26","2015-10-27","2015-10-28","2015-10-29","2015-10-30","2015-11-02","2015-11-03","2015-11-04","2015-11-05","2015-11-06","2015-11-09","2015-11-10","2015-11-11","2015-11-12","2015-11-13","2015-11-16","2015-11-17","2015-11-18","2015-11-19","2015-11-20","2015-11-23","2015-11-24","2015-11-25","2015-11-27","2015-11-30","2015-12-01","2015-12-02","2015-12-03","2015-12-04","2015-12-07","2015-12-08","2015-12-09","2015-12-10","2015-12-11","2015-12-14","2015-12-15","2015-12-16","2015-12-17","2015-12-18","2015-12-21","2015-12-22","2015-12-23","2015-12-24","2015-12-28","2015-12-29","2015-12-30","2015-12-31","2016-01-04","2016-01-05","2016-01-06","2016-01-07","2016-01-08","2016-01-11","2016-01-12","2016-01-13","2016-01-14","2016-01-15","2016-01-19","2016-01-20","2016-01-21","2016-01-22","2016-01-25","2016-01-26","2016-01-27","2016-01-28","2016-01-29","2016-02-01","2016-02-02","2016-02-03","2016-02-04","2016-02-05","2016-02-08","2016-02-09","2016-02-10","2016-02-11","2016-02-12","2016-02-16","2016-02-17","2016-02-18","2016-02-19","2016-02-22","2016-02-23","2016-02-24","2016-02-25","2016-02-26","2016-02-29","2016-03-01","2016-03-02","2016-03-03","2016-03-04","2016-03-07","2016-03-08","2016-03-09","2016-03-10","2016-03-11","2016-03-14","2016-03-15","2016-03-16","2016-03-17","2016-03-18","2016-03-21","2016-03-22","2016-03-23","2016-03-24","2016-03-28","2016-03-29","2016-03-30","2016-03-31","2016-04-01","2016-04-04","2016-04-05","2016-04-06","2016-04-07","2016-04-08","2016-04-11","2016-04-12","2016-04-13","2016-04-14","2016-04-15","2016-04-18","2016-04-19","2016-04-20","2016-04-21","2016-04-22","2016-04-25","2016-04-26","2016-04-27","2016-04-28","2016-04-29","2016-05-02","2016-05-03","2016-05-04","2016-05-05","2016-05-06","2016-05-09","2016-05-10","2016-05-11","2016-05-12","2016-05-13","2016-05-16","2016-05-17","2016-05-18","2016-05-19","2016-05-20","2016-05-23","2016-05-24","2016-05-25","2016-05-26","2016-05-27","2016-05-31","2016-06-01","2016-06-02","2016-06-03","2016-06-06","2016-06-07","2016-06-08","2016-06-09","2016-06-10","2016-06-13","2016-06-14","2016-06-15","2016-06-16","2016-06-17","2016-06-20","2016-06-21","2016-06-22","2016-06-23","2016-06-24","2016-06-27","2016-06-28","2016-06-29","2016-06-30","2016-07-01","2016-07-05","2016-07-06","2016-07-07","2016-07-08","2016-07-11","2016-07-12","2016-07-13","2016-07-14","2016-07-15","2016-07-18","2016-07-19","2016-07-20","2016-07-21","2016-07-22","2016-07-25","2016-07-26","2016-07-27","2016-07-28","2016-07-29","2016-08-01","2016-08-02","2016-08-03","2016-08-04","2016-08-05","2016-08-08","2016-08-09","2016-08-10","2016-08-11","2016-08-12","2016-08-15","2016-08-16","2016-08-17","2016-08-18","2016-08-19","2016-08-22","2016-08-23","2016-08-24","2016-08-25","2016-08-26","2016-08-29","2016-08-30","2016-08-31","2016-09-01","2016-09-02","2016-09-06","2016-09-07","2016-09-08","2016-09-09","2016-09-12","2016-09-13","2016-09-14","2016-09-15","2016-09-16","2016-09-19","2016-09-20","2016-09-21","2016-09-22","2016-09-23","2016-09-26","2016-09-27","2016-09-28","2016-09-29","2016-09-30","2016-10-03","2016-10-04","2016-10-05","2016-10-06","2016-10-07","2016-10-10","2016-10-11","2016-10-12","2016-10-13","2016-10-14","2016-10-17","2016-10-18","2016-10-19","2016-10-20","2016-10-21","2016-10-24","2016-10-25","2016-10-26","2016-10-27","2016-10-28","2016-10-31","2016-11-01","2016-11-02","2016-11-03","2016-11-04","2016-11-07","2016-11-08","2016-11-09","2016-11-10","2016-11-11","2016-11-14","2016-11-15","2016-11-16","2016-11-17","2016-11-18","2016-11-21","2016-11-22","2016-11-23","2016-11-25","2016-11-28","2016-11-29","2016-11-30","2016-12-01","2016-12-02","2016-12-05","2016-12-06","2016-12-07","2016-12-08","2016-12-09","2016-12-12","2016-12-13","2016-12-14","2016-12-15","2016-12-16","2016-12-19","2016-12-20","2016-12-21","2016-12-22","2016-12-23","2016-12-27","2016-12-28","2016-12-29","2016-12-30","2017-01-03","2017-01-04","2017-01-05","2017-01-06","2017-01-09","2017-01-10","2017-01-11","2017-01-12","2017-01-13","2017-01-17","2017-01-18","2017-01-19","2017-01-20","2017-01-23","2017-01-24","2017-01-25","2017-01-26","2017-01-27","2017-01-30","2017-01-31","2017-02-01","2017-02-02","2017-02-03","2017-02-06","2017-02-07","2017-02-08","2017-02-09","2017-02-10","2017-02-13","2017-02-14","2017-02-15","2017-02-16"];
	var aapl = [127.489998,127.629997,128.479996,128.619995,130.020004,132.940002,131.559998,128.789993,130,129.25,128.960007,129.100006,128.580002,128.399994,127.959999,126.410004,124.75,122.309998,124.400002,123.879997,125.900002,127,128.75,128.25,127.120003,127.230003,126.540001,122.760002,124.57,124.050003,126.089996,124.82,125.029999,124.470001,127.639999,125.849998,125.849998,125.949997,128.369995,127,126.410004,126.279999,125.550003,125.57,128.100006,126.989998,128.300003,130.490005,132.309998,134.460007,130.160004,128.639999,126.099998,129.5,128.149994,126.559998,124.769997,126.68,127.389999,125.599998,126.150002,127.410004,129.070007,128.380005,130.690002,130,130.070007,131.600006,132.600006,130.339996,131.860001,131.229996,130.279999,129.860001,130.660004,129.580002,129.5,128.899994,126.699997,127.919998,129.179993,128.190002,126.099998,127.029999,127.720001,127.230003,127.709999,127.489998,127.480003,127.209999,128.860001,127.669998,125.459999,125.57,126.900002,126.43,124.940002,125.889999,124.480003,123.849998,121.940002,125.029999,126.040001,125.720001,127.739998,129.080002,130.970001,132.850006,121.989998,126.199997,125.32,123.089996,123.379997,123.150002,122.32,122.599998,121.5,117.419998,112.949997,115.970001,114.580002,116.529999,117.809998,112.529999,116.040001,114.32,116.040001,116.43,116.099998,114.080002,110.43,94.870003,111.110001,107.089996,112.230003,112.169998,112.029999,110.150002,110.230003,112.489998,108.970001,111.75,113.760002,110.269997,111.790001,116.580002,115.93,116.25,115.660004,112.209999,113.669998,113.379997,113.629997,113.25,116.440002,113.849998,112.830002,110.169998,109.07,108.010002,109.879997,110.629997,111.739998,110.190002,110,112.730003,110.82,111.290001,110.93,111.779999,110.800003,111.339996,114,114.330002,116.699997,118.080002,115.400002,116.93,118.699997,120.989998,120.800003,120.790001,123.129997,121.849998,121.110001,120.959999,116.900002,116.370003,116.260002,115.199997,111.379997,114.919998,115.760002,117.639999,119.199997,119.269997,117.330002,119.209999,118.290001,117.989998,118.75,117.339996,116.550003,115.290001,118.980003,117.519997,117.639999,116.040001,115.190002,112.18,111.940002,111.07,112.019997,108.910004,107.279999,107.400002,107.269997,109,107.589996,106.959999,108.580002,107.010002,102.610001,105.75,100.559998,98.68,98.550003,98.970001,100.550003,100.32,97.959999,96.199997,98.410004,95.099998,97.059998,98.629997,101.519997,99.93,96.040001,93.790001,94.790001,96.470001,95.419998,95,95.860001,96.519997,93.129997,94.290001,95.919998,93.790001,94.190002,95.019997,96.669998,98.839996,96,96.309998,96.400002,93.980003,96.050003,97.199997,96.860001,97.650002,100.510002,100.580002,102.370003,102.389999,100.779999,101.309998,101.410004,102.239998,101.910004,103.959999,104.610001,105.519997,106.339996,105.93,105.25,106.480003,105.470001,106,104.889999,108.650002,109.720001,108.779999,110.419998,109.510002,110.230003,109.949997,108.910004,108.970001,109.339996,110.800003,111.620003,112.110001,108.889999,107.879997,106.639999,106.93,105.010002,105,103.910004,96,97.610001,93.989998,93.970001,94.199997,95.199997,94,93.370003,93,93.330002,93.480003,92.720001,90,92.389999,94.550003,94.160004,94.639999,94.639999,95.870003,97.220001,98.669998,99.68,99.440002,99.599998,99.019997,97.599998,97.790001,97.989998,99.25,99.019997,98.5,98.529999,98.690002,97.32,97.82,96.449997,96.620003,96,94.940002,96.25,95.940002,92.910004,93,92.900002,93.970001,94.440002,95.489998,95.389999,94.599998,95.699997,96.489998,96.75,97.169998,97.410004,97.389999,98.919998,98.699997,99.559998,100,99.830002,99.260002,98.25,96.82,104.269997,102.830002,104.190002,104.410004,106.050003,104.809998,105.580002,106.269997,107.519997,108.230003,108.709999,108.519997,107.779999,108.139999,109.629997,109.099998,109.230003,108.769997,108.860001,108.589996,108.57,107.389999,107.410004,106.620003,105.800003,105.660004,106.139999,107.699997,107.900002,107.830002,107.25,104.639999,102.650002,107.510002,108.730003,113.860001,115.120003,115.190002,113.050003,113.849998,114.349998,114.419998,111.639999,113,113.690002,113.160004,112.459999,112.709999,113.059998,113.400002,113.699997,114.309998,115.019997,117.699997,117.349998,116.790001,117.879997,117.330002,118.18,117.25,116.860001,116.809998,117.099998,117.949997,114.309998,115.389999,113.870003,113.650002,113.459999,111.400002,110.980003,108.529999,110.080002,110.309998,109.879997,111.089996,107.120003,107.709999,106.57,106.699997,109.809998,109.720001,110.120003,111.949997,111.360001,111.129997,111.43,110.779999,111.599998,110.370003,109.169998,110,109.5,109.260002,110.860001,112.309998,113.290001,113.839996,115.040001,115.379997,116.470001,115.800003,116.739998,116.800003,116.349998,115.589996,116.519997,117.519997,116.449997,116.650002,115.800003,115.849998,115.919998,116.779999,117.949997,118.769997,118.739998,118.900002,119.110001,118.339996,120,119.400002,120.449997,120,119.550003,120.419998,121.669998,122.139999,120.93,121.150002,127.029999,127.980003,128.309998,129.130005,130.539993,131.350006,131.649994,132.460007,133.080002,133.470001,135.520004,135.669998];

	let filteredDates = [];
    let filteredAapl = [];
	
	// Filtrar los datos en función de los valores de los sliders
    function filterDataBySlider(min, max) {
        filteredDates = [];  // Limpiar la lista de fechas filtradas
        filteredAapl = [];   // Limpiar la lista de valores filtrados

        // Recorrer los datos y filtrar por el rango seleccionado por los sliders
        for (let i = parseInt(min); i < parseInt(max); i++) {
            filteredDates.push(dates[i]);  // Añadir la fecha filtrada
            filteredAapl.push(aapl[i]);    // Añadir el valor AAPL correspondiente
        }
    }

    // Función para graficar los datos filtrados
    function plotData() {
        const trace1 = {
            type: "scatter",
            mode: "lines",
            name: 'AAPL',
            x: filteredDates,
            y: filteredAapl,
            line: { color: '#17BECF' }
        };

        const data = [trace1];

        const layout = {
            title: 'Apple Stock',
            showlegend: false,
            xaxis: {
                range: [filteredDates[0], filteredDates[filteredDates.length - 1]]
            },
            yaxis: {
                range: [85, 140]  // Ajusta según los datos reales
            }
        };

        Plotly.newPlot('myDiv', data, layout);  // Crear o actualizar el gráfico
    }

		
	let sliderOne = document.getElementById("slider-1");
    let sliderTwo = document.getElementById("slider-2");
    let sliderMaxValue = dates.length;

    // Configura los sliders con el valor máximo y value basado en la longitud de las fechas
    sliderOne.max = sliderMaxValue;
    sliderTwo.max = sliderMaxValue;
	sliderTwo.value = sliderMaxValue;

    // Mínima diferencia permitida entre los dos sliders
    const minGap = 30;

    // Función para actualizar los filtros y el gráfico basado en los sliders
    function updateSliders() {
        // Asegurarse de que los sliders no se crucen
        if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {
            if (this === sliderOne) {
                sliderOne.value = parseInt(sliderTwo.value) - minGap;
            } else {
                sliderTwo.value = parseInt(sliderOne.value) + minGap;
            }
        }

        // Llamar a filterDataBySlider con los valores de los sliders
        filterDataBySlider(sliderOne.value, sliderTwo.value);
        plotData();

    }

    // Añadir eventos a los sliders para actualizar el gráfico en tiempo real
    sliderOne.addEventListener('input', updateSliders);
    sliderTwo.addEventListener('input', updateSliders);

    // Inicializa el grafico con los sliders en sus posiciones minima y maxima (overview general)
    updateSliders();

